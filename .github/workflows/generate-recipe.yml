name: Claude Code

on:
  issues:
    types: [assigned]

jobs:
  claude:
    runs-on: ubuntu-24.04
    container: 
      image: ghcr.io/${{ github.repository }}/ubuntu:22.04
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Parse issue inputs and fetch recipe
        id: fetch
        run: |
          # Extract URL and category from issue body
          URL=$(echo '${{ github.event.issue.body }}' | jq -r '.url // empty')
          CATEGORY=$(echo '${{ github.event.issue.body }}' | jq -r '.category // empty')
          
          if [[ -z "$URL" ]]; then
            echo "Error: No URL found in issue"
            exit 1
          fi

          echo "{{ github.event.issue.body }}" > /tmp/issue.json

          # Use the containerized recipe fetcher
          node ./scripts/recipe-fetch.js "$URL"
          
          # Verify the output file was created
          if [[ ! -f "/tmp/html.json" ]]; then
            echo "Error: html.json was not created"
            exit 1
          fi

          # Verify the output file was created
          if [[ ! -f "/tmp/html.json" ]]; then
            echo "Error: html.json was not created"
            exit 1
          fi

          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "category=${CATEGORY:-main}" >> $GITHUB_OUTPUT

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            Parse the fetched recipe data from ./output/recipe.json and convert it to the standardized format according to @instructions.md.
            
            The recipe.json contains:
            - html: Raw HTML content from the recipe webpage
            - jsonLd: Structured JSON-LD data (may be null if not present)
            
            Use the jsonLd data as the primary source if available, otherwise parse the HTML content.
            
            Recipe URL: ${{ steps.fetch.outputs.url }}
            Recipe Category: ${{ steps.fetch.outputs.category }}
            
            Follow the measurement conversion rules from @conversions.yaml and create both the JSON output file and MDX suggestion file as specified in the instructions.
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

      - name: Create PR from Claude response
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="recipe-${{ github.event.issue.number }}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "${BRANCH_NAME}"
          git add -A
          git commit -m "${{ github.event.issue.number }} recipe suggestion" || echo "No changes to commit"
          git push --set-upstream origin "${BRANCH_NAME}"
          gh pr create --head "${BRANCH_NAME}" --base main --title "${{ github.event.issue.number }} recipe suggestion" --body "New Recipe processed by Claude"

      - name: Upload artifacts even if Build failed
        if: ${{ always() }}              # runs on success or failure (not if job is cancelled)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./output/**
            ./suggestions/**
          if-no-files-found: ignore
          retention-days: 7
