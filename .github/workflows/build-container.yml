name: Build and Push Cookbook Containers

on:
  push:
    branches: ["main"]
    paths:
      # Only rebuild containers when their respective Dockerfiles or this workflow changes
      - "Dockerfile.ubuntu"
      - "Dockerfile.node"
      - ".github/workflows/build-container.yml"
  
  # Allow manual trigger with options
  workflow_dispatch:
    inputs:
      build_ubuntu:
        description: 'Build Ubuntu container'
        required: false
        default: true
        type: boolean
      build_node:
        description: 'Build Node container'
        required: false
        default: true
        type: boolean
      force_rebuild:
        description: 'Force rebuild (ignore path filters)'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if Ubuntu build is needed
        uses: dorny/paths-filter@v2
        id: ubuntu-filter
        with:
          filters: |
            ubuntu:
              - 'Dockerfile.ubuntu'
              - '.github/workflows/build-container.yml'
      
      - name: Determine if Ubuntu build should run
        id: should-build-ubuntu
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ inputs.force_rebuild }}" == "true" ]] || [[ "${{ inputs.build_ubuntu }}" == "true" ]]; then
              echo "should_build=true" >> $GITHUB_OUTPUT
            else
              echo "should_build=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_build=${{ steps.ubuntu-filter.outputs.ubuntu }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Container Registry
        if: steps.should-build-ubuntu.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Ubuntu
        if: steps.should-build-ubuntu.outputs.should_build == 'true'
        id: meta-ubuntu
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/ubuntu
          tags: |
            type=raw,value=22.04
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        if: steps.should-build-ubuntu.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Ubuntu Docker image
        if: steps.should-build-ubuntu.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ubuntu
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-ubuntu.outputs.tags }}
          labels: ${{ steps.meta-ubuntu.outputs.labels }}
          cache-from: type=gha,scope=ubuntu
          cache-to: type=gha,mode=max,scope=ubuntu

  build-node:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if Node build is needed
        uses: dorny/paths-filter@v2
        id: node-filter
        with:
          filters: |
            node:
              - 'Dockerfile.node'
              - '.github/workflows/build-container.yml'
      
      - name: Determine if Node build should run
        id: should-build-node
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ inputs.force_rebuild }}" == "true" ]] || [[ "${{ inputs.build_node }}" == "true" ]]; then
              echo "should_build=true" >> $GITHUB_OUTPUT
            else
              echo "should_build=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_build=${{ steps.node-filter.outputs.node }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Container Registry
        if: steps.should-build-node.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Node
        if: steps.should-build-node.outputs.should_build == 'true'
        id: meta-node
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/node
          tags: |
            type=raw,value=22-alpine
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        if: steps.should-build-node.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Node Docker image
        if: steps.should-build-node.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.node
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-node.outputs.tags }}
          labels: ${{ steps.meta-node.outputs.labels }}
          cache-from: type=gha,scope=node
          cache-to: type=gha,mode=max,scope=node