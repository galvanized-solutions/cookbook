name: Build and Deploy Docusaurus to Pages
on:
  # Runs on pushes targeting the default branch
  workflow_run:
      workflows: ["Build and Push Cookbook Containers"]            # exact name of Workflow A
      types: [completed]
  push:
    branches: ["main"]
    paths:
      # Docusaurus configuration files
      - packages/app/**/*
      # Package and dependency files
      - "package.json"
      - packages/app/package.json
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      # GitHub workflows (to rebuild when workflow changes)
      - ".github/workflows/build.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  packages: read
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pipeline-pages-${{ github.event.pull_request.number || github.ref }}"
  # We want to wait, cancel if the image build is happening
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/${{ github.repository }}/node:22-alpine
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    environment:
      name: github-pages
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: main
          sparse-checkout: |
            packages/app
          sparse-checkout-cone-mode: false
          fetch-depth: 0
      
      - name: Copy source files to workspace
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Copying packages/app to /workspace/"
          mv /packages/app /workspace/packages/app
          echo "Contents of /workspace after copy:"
          ls -la /workspace/
      # - name: Build with Docusaurus
      #   run: |
      #     cd /workspace/packages/app
      #     pnpm run build
      #   env:
      #     FAT: ${{ secrets.FAT }}
          
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
        
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: /workspace/packages/app/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
